<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ivy.dao.PoetriesMapper">
  <resultMap id="BaseResultMap" type="com.ivy.model.po.Poetries">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="poet_id" jdbcType="INTEGER" property="poetId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="dynasty" jdbcType="VARCHAR" property="dynasty" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ivy.model.po.Poetries">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  
  <resultMap id="poetriesIndexResultMap" type="com.ivy.model.bo.PoetriesIndexBO">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="INTEGER" property="title" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="author" jdbcType="TIMESTAMP" property="author" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, poet_id, title, created_at, updated_at, dynasty
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from poetries
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from poetries
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ivy.model.po.Poetries">
    insert into poetries (id, poet_id, title, 
      created_at, updated_at, dynasty, 
      content)
    values (#{id,jdbcType=INTEGER}, #{poetId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{dynasty,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ivy.model.po.Poetries">
    insert into poetries
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="poetId != null">
        poet_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="dynasty != null">
        dynasty,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="poetId != null">
        #{poetId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dynasty != null">
        #{dynasty,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ivy.model.po.Poetries">
    update poetries
    <set>
      <if test="poetId != null">
        poet_id = #{poetId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dynasty != null">
        dynasty = #{dynasty,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ivy.model.po.Poetries">
    update poetries
    set poet_id = #{poetId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      dynasty = #{dynasty,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ivy.model.po.Poetries">
    update poetries
    set poet_id = #{poetId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      dynasty = #{dynasty,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="getIndexPoetries" resultMap="poetriesIndexResultMap">
    select p.id as id,p.title,p.content,auth.name as author 
    from poetries p,poets auth 
    where p.poet_id=auth.id 
    order by rand() 
    limit 4
  </select>
  
</mapper>